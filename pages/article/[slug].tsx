import * as fs from 'fs';
import { GetStaticPropsContext, InferGetStaticPropsType } from "next"
import { serialize } from "next-mdx-remote/serialize"
import { MDXRemote } from "next-mdx-remote"
import Header from "@/app/header"
import Footer from '@/app/footer';
import React from "react"
import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "@/app/globals.css";


export function H2({ children }: { children?: React.ReactNode }) {
  return <h2 className="mdx-h2">{children}</h2>
}

export function H1({ children }: { children?: React.ReactNode }) {
  return <h1 className="mdx-h1">{children}</h1>
}

export function HeroImage({ src, alt }: { src: string; alt: string }) {
  return (
    <div className={"mdx-hero-image lg:h-auto mb-[2em]"}>
      <img className='w-full' src={src} alt={alt}></img>
    </div>
  )
}

export function P({ children }: { children?: React.ReactNode }) {
  return <p className="mdx-p text-stone-800 mt-1">{children}</p>
}


const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};


export default function Home({ source }: InferGetStaticPropsType<typeof getStaticProps>) {
  return (
    <div className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
      <Header></Header>
      <header>
        <title>{source.frontmatter.title as string}</title>
        <meta http-equiv="content-type" content="text/html; charset=UTF-8"/>

        <meta http-equiv="X-UA-Compatible" content="ie=edge"/>
        <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
        <meta name="mobile-web-app-capable" content="yes"/>

        <meta name="title" content={ source.frontmatter.title as string }/>
        <meta name="description" content={ source.frontmatter.description as string}/>
        <meta name="template" content="Article"/>

        <meta name="Publisher" content="Miliaris.uk"/>
        <meta name="Copyright" content="Miliaris.uk"/>

      </header>
      <div className='items-center bg-stone-50'>
        <div className='lg:pt-[10em] pt-[3em] lg:w-[900px] mx-auto min-h-screen px-[1.1em] lg:px-[0] pb-[2em]'>
          <MDXRemote
              {...source}
              // specifying the custom MDX components
              components={{
                h1: H1,
                h2: H2,
                p: P,
                HeroImage,
              }}
            />
      </div>
      </div>
      <Footer></Footer>
    </div>
  )
}
export async function getStaticPaths() {
  return { paths: [], fallback: "blocking" }
}

export async function getStaticProps(
  ctx: GetStaticPropsContext<{
    slug: string
  }>,
) {
  const { slug } = ctx.params!

  // retrieve the MDX blog post file associated
  // with the specified slug parameter
  const postFile = fs.readFileSync(`_posts/${slug}.mdx`)

  // read the MDX serialized content along with the frontmatter
  // from the .mdx blog post file
  const mdxSource = await serialize(postFile, { parseFrontmatter: true })
  return {
    props: {
      source: mdxSource,
    },
    // enable ISR
    revalidate: 60,
  }
}